{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./persona.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PersonaComponent_table_11_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const p_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.apellido1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.apellido2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.telefono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.correo);\n  }\n}\nfunction PersonaComponent_table_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Apellido 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Apellido 2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Tel\\u00E9fono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Correo\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, PersonaComponent_table_11_tr_14_Template, 11, 5, \"tr\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.personas);\n  }\n}\nexport let PersonaComponent = /*#__PURE__*/(() => {\n  class PersonaComponent {\n    constructor(personaService) {\n      this.personaService = personaService;\n      this.persona = {\n        operacion: 1,\n        nombre: '',\n        apellido1: '',\n        apellido2: '',\n        telefono: 0,\n        correo: ''\n      };\n      this.personas = [];\n    }\n    ngOnInit() {\n      this.cargarPersonas();\n    }\n    cargarPersonas() {\n      this.personaService.obtenerPersonas().subscribe({\n        next: data => this.personas = data,\n        error: err => console.error('Error cargando personas', err)\n      });\n    }\n    registrar() {\n      this.personaService.registrarPersona(this.persona).subscribe({\n        next: res => {\n          console.log('Respuesta del backend:', res);\n          alert('Persona registrada correctamente');\n          this.cargarPersonas();\n        },\n        error: err => {\n          console.error('Error al registrar persona:', err);\n          alert('Error al registrar persona: ' + (err.error?.message || err.statusText));\n        }\n      });\n    }\n    static {\n      this.ɵfac = function PersonaComponent_Factory(t) {\n        return new (t || PersonaComponent)(i0.ɵɵdirectiveInject(i1.PersonaService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PersonaComponent,\n        selectors: [[\"app-persona\"]],\n        decls: 12,\n        vars: 6,\n        consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"name\", \"nombre\", \"placeholder\", \"Nombre\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"apellido1\", \"placeholder\", \"Apellido 1\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"apellido2\", \"placeholder\", \"Apellido 2\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"telefono\", \"placeholder\", \"Tel\\u00E9fono\", \"type\", \"number\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"correo\", \"placeholder\", \"Correo\", \"type\", \"email\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [\"class\", \"persona-table\", 4, \"ngIf\"], [1, \"persona-table\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function PersonaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Registrar Persona\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function PersonaComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.registrar();\n            });\n            i0.ɵɵelementStart(4, \"input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function PersonaComponent_Template_input_ngModelChange_4_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.persona.nombre, $event) || (ctx.persona.nombre = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function PersonaComponent_Template_input_ngModelChange_5_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.persona.apellido1, $event) || (ctx.persona.apellido1 = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"input\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function PersonaComponent_Template_input_ngModelChange_6_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.persona.apellido2, $event) || (ctx.persona.apellido2 = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"input\", 5);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function PersonaComponent_Template_input_ngModelChange_7_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.persona.telefono, $event) || (ctx.persona.telefono = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"input\", 6);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function PersonaComponent_Template_input_ngModelChange_8_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.persona.correo, $event) || (ctx.persona.correo = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"button\", 7);\n            i0.ɵɵtext(10, \"Registrar\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(11, PersonaComponent_table_11_Template, 15, 1, \"table\", 8);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.persona.nombre);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.persona.apellido1);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.persona.apellido2);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.persona.telefono);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.persona.correo);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.personas.length > 0);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n        styles: [\".form-container[_ngcontent-%COMP%]{max-width:450px;margin:40px auto;padding:30px;border-radius:16px;background-color:#fff;box-shadow:0 4px 20px #0000001a;font-family:Segoe UI,sans-serif}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;color:#222}input[_ngcontent-%COMP%]{width:100%;padding:10px;margin-bottom:15px;border-radius:8px;border:1px solid #ccc;font-size:14px}button[type=submit][_ngcontent-%COMP%]{width:100%;padding:10px;border:none;background-color:#007bff;color:#fff;font-weight:700;border-radius:8px;cursor:pointer;transition:background-color .3s}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3}.persona-table[_ngcontent-%COMP%]{width:90%;margin:30px auto;border-collapse:collapse;font-size:14px;font-family:Segoe UI,sans-serif;background-color:#fff;box-shadow:0 0 8px #0000000d}.persona-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .persona-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:10px;text-align:left}.persona-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;font-weight:700;color:#333}.persona-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f2f2}\"]\n      });\n    }\n  }\n  return PersonaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}